{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "overlay",
  "type": "registry:component",
  "title": "Example overlay",
  "author": "@gabimoncha",
  "description": "Displays a button which is always red.",
  "files": [
    {
      "path": "./node_modules/@tastien/react-native-component/src/components/overlay/overlay.tsx",
      "content": "import React, { memo, useEffect, useRef, useState } from \"react\";\nimport {\n  Animated,\n  BackHandler,\n  Platform,\n  TouchableOpacity,\n} from \"react-native\";\nimport type { OverlayProps } from \"./types\";\nimport { cn } from \"../../lib/utils\";\n\n/**\n * Overlay 遮罩层\n * @description 创建一个遮罩层，用于强调特定的页面元素，并阻止用户进行其他操作。\n * TODO 统计遮罩层数量，动态控制状态栏的颜色，避免黑色遮罩层配合黑色文字的状态栏。\n */\nconst Overlay: React.FC<OverlayProps> = ({\n  testID,\n  children,\n  className,\n  overlayClassName,\n  visible = false,\n  duration = 300,\n  onPress,\n  onRequestClose,\n}) => {\n  const fadeAnim = useRef(new Animated.Value(0));\n  const fadeInstance = useRef<Animated.CompositeAnimation | null>(null);\n  const [localVisible, setLocalVisible] = useState(visible);\n\n  // 监听状态变化，执行动画\n  useEffect(() => {\n    if (visible) {\n      setLocalVisible(true);\n    }\n\n    fadeInstance.current = Animated.timing(\n      fadeAnim.current, // 动画中的变量值\n      {\n        toValue: visible ? 1 : 0,\n        duration,\n        useNativeDriver: true,\n      }\n    );\n\n    fadeInstance.current.start(({ finished }) => {\n      if (finished) {\n        fadeInstance.current = null;\n\n        if (!visible) {\n          setLocalVisible(false);\n        }\n      }\n    });\n\n    return () => {\n      // 停止动画\n      if (fadeInstance.current) {\n        fadeInstance.current.stop();\n        fadeInstance.current = null;\n      }\n    };\n  }, [visible, duration]);\n\n  // Android 返回按钮\n  useEffect(() => {\n    if (Platform.OS === \"android\") {\n      const backHandler = BackHandler.addEventListener(\n        \"hardwareBackPress\",\n        () => {\n          if (typeof onRequestClose === \"function\" && visible) {\n            return onRequestClose();\n          }\n\n          return false;\n        }\n      );\n\n      return () => backHandler.remove();\n    }\n  }, [visible, onRequestClose]);\n\n  if (!localVisible) {\n    // TODO 优化文档报错\n    // 直接返回 null dumi 报错 -、-\n\n    return <></>;\n  }\n\n  return (\n    <Animated.View\n      testID={testID}\n      style={{\n        opacity: fadeAnim.current,\n      }}\n      className={cn(\n        \"relative left-0 right-0 bottom-0 top-0 bg-black/70\",\n        localVisible ? \"absolute\" : null,\n        overlayClassName\n      )}\n    >\n      <TouchableOpacity\n        className={cn(\"flex-1\", className)}\n        activeOpacity={1}\n        onPress={onPress}\n      >\n        {children}\n      </TouchableOpacity>\n    </Animated.View>\n  );\n};\n\nexport default memo(Overlay);\n",
      "type": "registry:component"
    },
    {
      "path": "./node_modules/@tastien/react-native-component/src/components/overlay/index.tsx",
      "content": "import React from 'react';\nimport Overlay from './overlay';\nimport type { OverlayProps } from './types';\n\n/**\n * Overlay 遮罩层\n * @description 创建一个遮罩层，用于强调特定的页面元素，并阻止用户进行其他操作。\n */\nconst OverlayContainer: React.FC<OverlayProps> = (props) => {\n  return <Overlay {...props} />;\n};\n\nexport default OverlayContainer;\n",
      "type": "registry:component"
    },
    {
      "path": "./node_modules/@tastien/react-native-component/src/components/overlay/types.ts",
      "content": "import type { PropsWithChildren } from 'react';\nimport type { ViewProps } from 'react-native';\n\nexport interface OverlayProps extends PropsWithChildren<{}>, Pick<ViewProps, 'testID'> {\n  /**\n   * 最外层样式\n   */\n  className?: string;\n  /**\n   * overlay 样式\n   */\n  overlayClassName?: string;\n\n  /**\n   * 是否展示遮罩层\n   * @default false\n   */\n  visible?: boolean;\n\n  /**\n   * 动画时长，单位毫秒，默认值 300\n   * @default animation_duration_base\n   */\n  duration?: number;\n\n  /**\n   * 点击弹层\n   */\n  onPress?: () => void;\n\n  /**\n   * 当点击返回按钮时触发\n   * @support Android\n   */\n  onRequestClose?: () => boolean;\n}\n",
      "type": "registry:component"
    }
  ]
}