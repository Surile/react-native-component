{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "result",
  "type": "registry:component",
  "title": "Example result",
  "author": "@gabimoncha",
  "description": "Displays a button which is always red.",
  "registryDependencies": [
    "http://localhost:3000/r/helpers.json",
    "http://localhost:3000/r/icons.json"
  ],
  "files": [
    {
      "path": "./node_modules/@tastien/react-native-component/src/components/result/icons/result-icon-box.tsx",
      "content": "import React, { memo } from 'react'\nimport type { ViewStyle } from 'react-native'\nimport { Svg, G, Path, Ellipse } from 'react-native-svg'\n\nimport type { ResultIconProps } from '../interface'\n\nconst SVG_STYLE: ViewStyle = {\n  alignSelf: 'center',\n  marginBottom: 8,\n}\n\nconst ResultIconBox: React.FC<ResultIconProps> = ({\n  style,\n  width = 64,\n  height = 41,\n  ...restProps\n}) => {\n  return (\n    <Svg\n      {...restProps}\n      style={style || SVG_STYLE}\n      width={width}\n      height={height}\n      viewBox=\"0 0 64 41\">\n      <G transform=\"translate(0 1)\" fill=\"none\" fillRule=\"evenodd\">\n        <Ellipse cx=\"32\" cy=\"33\" rx=\"32\" ry=\"7\" fill=\"#f5f5f5\" />\n        <G fillRule=\"nonzero\" stroke=\"#d9d9d9\">\n          <Path d=\"M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z\" />\n          <Path\n            d=\"M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z\"\n            fill=\"#fafafa\"\n          />\n        </G>\n      </G>\n    </Svg>\n  )\n}\n\nexport default memo(ResultIconBox)\n",
      "type": "registry:component"
    },
    {
      "path": "./node_modules/@tastien/react-native-component/src/components/result/icons/result-icon-empty.tsx",
      "content": "import React, { memo } from 'react'\nimport type { ViewStyle } from 'react-native'\nimport { View } from 'react-native'\nimport { SvgXml } from 'react-native-svg'\n\nimport type { ResultIconProps } from '../interface'\n\nconst SVG_STYLE: ViewStyle = {\n  alignSelf: 'center',\n}\n\nconst ResultIconEmpty: React.FC<ResultIconProps> = ({\n  style,\n  width = 90,\n  height = 90,\n  ...restProps\n}) => {\n  return (\n    <View {...restProps} style={style || SVG_STYLE}>\n      {SvgXml ? (\n        <SvgXml\n          {...restProps}\n          xml={`<svg width=\"${width}\" height=\"${height}\" viewBox=\"0 0 90 90\" xmlns=\"http://www.w3.org/2000/svg\"><g transform=\"translate(1 25)\" fill=\"none\" fill-rule=\"evenodd\"><ellipse fill=\"#EDEFF2\" cx=\"44\" cy=\"50\" rx=\"44\" ry=\"8\"/><path d=\"M62.333 0H25.667L11 18v31.75a2 2 0 0 0 2 2h62a2 2 0 0 0 2-2V18L62.333 0z\" fill=\"#FFF\"/><path d=\"M62.333 0L77 18v31.75a2 2 0 0 1-1.85 1.995l-.15.005H13a2 2 0 0 1-1.995-1.85L11 49.75V18L25.667 0h36.666zM50.75 39h-13.5a1.25 1.25 0 0 0 0 2.5h13.5a1.25 1.25 0 0 0 0-2.5zm9.99-36.75H27.26L14.465 18h12.87a2 2 0 0 1 2 2v6.5a2 2 0 0 0 2 2H56.36a2 2 0 0 0 2-2V20a2 2 0 0 1 2-2h13.178L60.739 2.25z\" fill=\"#E1E3E6\"/></g></svg>`}\n        />\n      ) : null}\n    </View>\n  )\n}\n\nexport default memo(ResultIconEmpty)\n",
      "type": "registry:component"
    },
    {
      "path": "./node_modules/@tastien/react-native-component/src/components/result/icons/result-icon-error.tsx",
      "content": "import React, { memo } from 'react'\nimport type { ViewStyle } from 'react-native'\nimport { View } from 'react-native'\nimport { SvgXml } from 'react-native-svg'\n\nimport type { ResultIconProps } from '../interface'\n\nconst SVG_STYLE: ViewStyle = {\n  alignSelf: 'center',\n}\n\nconst ResultIconError: React.FC<ResultIconProps> = ({\n  style,\n  width = 90,\n  height = 90,\n  ...restProps\n}) => {\n  return (\n    <View {...restProps} style={style || SVG_STYLE}>\n      {SvgXml ? (\n        <SvgXml\n          xml={`<svg width=\"${width}\" height=\"${height}\" viewBox=\"0 0 90 90\" xmlns=\"http://www.w3.org/2000/svg\"><g transform=\"translate(1 15)\" fill=\"none\" fill-rule=\"evenodd\"><ellipse fill=\"#EDEFF2\" cx=\"44\" cy=\"61\" rx=\"44\" ry=\"8\"/><path d=\"M33.25.75c.966 0 1.75.784 1.75 1.75l-.001 5.417h18.072V2.5A1.75 1.75 0 0 1 54.678.756L54.82.75H68A3.25 3.25 0 0 1 71.25 4v56A3.25 3.25 0 0 1 68 63.25H20A3.25 3.25 0 0 1 16.75 60V4A3.25 3.25 0 0 1 20 .75zM48.5 0A2.5 2.5 0 0 1 51 2.5v2a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-2A2.5 2.5 0 0 1 39.5 0h9z\" fill=\"#E1E3E6\" fill-rule=\"nonzero\"/><path d=\"M55.571 8.667V3.25H68a.75.75 0 0 1 .75.75v56a.75.75 0 0 1-.75.75H20a.75.75 0 0 1-.75-.75V4l.007-.102A.75.75 0 0 1 20 3.25h12.499v5.417c0 .967.784 1.75 1.75 1.75h19.572a1.75 1.75 0 0 0 1.75-1.75z\" fill=\"#FFF\" fill-rule=\"nonzero\"/><path d=\"M44 22c7.18 0 13 5.82 13 13s-5.82 13-13 13-13-5.82-13-13 5.82-13 13-13zm.011 17.727a1.477 1.477 0 1 0 0 2.955 1.477 1.477 0 0 0 0-2.955zm.143-13h-.308a2 2 0 0 0-1.99 2.2l.845 8.443a1.306 1.306 0 0 0 2.598 0l.845-8.444a2 2 0 0 0-1.99-2.199z\" fill=\"#E1E3E6\"/></g></svg>`}\n        />\n      ) : null}\n    </View>\n  )\n}\n\nexport default memo(ResultIconError)\n",
      "type": "registry:component"
    },
    {
      "path": "./node_modules/@tastien/react-native-component/src/components/result/icons/result-icon-warning.tsx",
      "content": "import React, { memo } from 'react'\nimport type { ViewStyle } from 'react-native'\nimport { View } from 'react-native'\nimport { SvgXml } from 'react-native-svg'\n\nimport type { ResultIconProps } from '../interface'\n\nconst SVG_STYLE: ViewStyle = {\n  alignSelf: 'center',\n}\n\nconst ResultIconWarning: React.FC<ResultIconProps> = ({\n  style,\n  width = 90,\n  height = 90,\n  ...restProps\n}) => {\n  return (\n    <View {...restProps} style={style || SVG_STYLE}>\n      {SvgXml ? (\n        <SvgXml\n          xml={`<svg width=\"${width}\" height=\"${height}\" viewBox=\"0 0 90 90\" xmlns=\"http://www.w3.org/2000/svg\"><g transform=\"translate(5.917 11.274)\" fill=\"none\" fill-rule=\"evenodd\"><ellipse fill=\"#EDEFF2\" cx=\"38.083\" cy=\"67.726\" rx=\"32\" ry=\"6\"/><g fill=\"#E1E3E6\"><path d=\"M40.243 35.355c9.294 9.294 14.228 18.185 13.109 18.97-6.265 4.393-14.172 5.415-21.202 3.068l.827 8.6a1 1 0 0 1-.995 1.095h-5.799a1 1 0 0 1-.995-1.096l1.106-11.508a23.93 23.93 0 0 1-3.415-2.836c-8.351-8.35-9.199-21.365-2.542-30.662.752-1.05 10.612 5.075 19.906 14.369z\"/><path d=\"M44.93 29.597a4.104 4.104 0 0 1 .188 5.603l-5.79-5.79a4.104 4.104 0 0 1 5.603.187zm.995-10.924a9.933 9.933 0 0 0-.636 3.02l-.16-.08a16.821 16.821 0 0 0-8.831-1.623A1.5 1.5 0 1 1 36.036 17a19.83 19.83 0 0 1 9.889 1.672zM57.044 32.07c.499 2.056.668 4.195.489 6.342a1.5 1.5 0 0 1-2.99-.25 16.877 16.877 0 0 0-.582-6.024 10.06 10.06 0 0 0 3.083-.068zm-3.371-19.716a9.925 9.925 0 0 0-3.548 1.298l-.034-.02a26.603 26.603 0 0 0-13.19-3.554 1.5 1.5 0 1 1 .013-3 29.58 29.58 0 0 1 16.759 5.276zm10.814 13.768a29.663 29.663 0 0 1 1.96 10.226 1.5 1.5 0 1 1-3 .041 26.742 26.742 0 0 0-1.065-7.129 10.014 10.014 0 0 0 2.105-3.138z\" fill-rule=\"nonzero\"/></g><g transform=\"translate(45.275 12.226)\"><circle fill=\"#FFF\" cx=\"10\" cy=\"10\" r=\"8\"/><path d=\"M10 2a8 8 0 1 1 0 16 8 8 0 0 1 0-16zm.007 10.91a.91.91 0 1 0 0 1.817.91.91 0 0 0 0-1.818zm-.007-8a1.316 1.316 0 0 0-1.31 1.446l.51 5.102a.804.804 0 0 0 1.6 0l.51-5.102A1.316 1.316 0 0 0 10 4.91z\" fill=\"#E1E3E6\"/></g></g></svg>`}\n        />\n      ) : null}\n    </View>\n  )\n}\n\nexport default memo(ResultIconWarning)\n",
      "type": "registry:component"
    },
    {
      "path": "./node_modules/@tastien/react-native-component/src/components/result/index.ts",
      "content": "\nimport { attachPropertiesToComponent } from '../../helpers'\nimport IconBox from './icons/result-icon-box'\nimport IconEmpty from './icons/result-icon-empty'\nimport IconError from './icons/result-icon-error'\nimport IconWarning from './icons/result-icon-warning'\nimport Result from './result'\n\nexport default attachPropertiesToComponent(Result, {\n  IconBox: IconBox,\n  IconEmpty: IconEmpty,\n  IconError: IconError,\n  IconWarning: IconWarning,\n})\n",
      "type": "registry:component"
    },
    {
      "path": "./node_modules/@tastien/react-native-component/src/components/result/interface.ts",
      "content": "import type React from 'react'\nimport type { ViewProps, ColorValue } from 'react-native'\n\nexport type ResultStatus = 'success' | 'error' | 'info' | 'warning'\n\nexport interface ResultProps extends ViewProps {\n  /**\n   * subtitle 文字样式\n   */\n  subtitleTextClassName?: string\n\n  /**\n   * title 文字样式\n   */\n  titleTextClassName?: string\n\n  /**\n   * 操作区\n   */\n  extra?: React.ReactNode\n\n  /**\n   * 自定义 icon\n   */\n  renderIcon?: (color: ColorValue, size: number) => React.ReactNode\n\n  /**\n   * 结果的状态，决定图标和颜色\n   */\n  status: ResultStatus\n\n  /**\n   * subtitle 文字\n   */\n  subtitle?: React.ReactNode\n\n  /**\n   * title 文字\n   */\n  title?: React.ReactNode\n}\n\nexport interface ResultIconProps extends ViewProps {\n  width?: number\n  height?: number\n}\n",
      "type": "registry:component"
    },
    {
      "path": "./node_modules/@tastien/react-native-component/src/components/result/result.tsx",
      "content": "import React, { memo } from 'react';\nimport { View } from 'react-native';\n\nimport Space from '../space';\n\nimport type { ResultProps, ResultStatus } from './interface';\nimport { renderTextLikeJSX } from '../../helpers';\nimport { cn } from '../../lib/utils';\nimport { cva } from 'class-variance-authority';\nimport { CrossOutline, SuccessOutline, WarningOutline } from '../icons';\n\nconst renderStatusIcon = (status: ResultStatus, size: number) => {\n  const props = {\n    size,\n    color: '#fff',\n  };\n\n  switch (status) {\n    case 'success':\n      return <SuccessOutline {...props} />;\n\n    case 'warning':\n    case 'info':\n      return <WarningOutline {...props} />;\n\n    case 'error':\n      return <CrossOutline {...props} />;\n\n    default:\n      return null;\n  }\n};\n\nconst result_icon_colors = {\n  success: '#009A29',\n  error: '#CB2634',\n  info: '#4080FF',\n  warning: '#D25F00',\n};\n\nconst iconBgColors = cva('', {\n  variants: {\n    status: {\n      success: 'bg-success-4',\n      error: 'bg-danger-4',\n      info: 'bg-info-4',\n      warning: 'bg-warning-4',\n    },\n  },\n});\n\n/**\n * Result结果\n * @description 用于反馈一系列操作任务的处理结果。\n */\nconst Result: React.FC<ResultProps> = ({\n  subtitleTextClassName,\n  titleTextClassName,\n  title,\n  subtitle,\n  extra,\n  renderIcon,\n  status,\n  ...restProps\n}) => {\n  const color = result_icon_colors[status as keyof typeof result_icon_colors];\n  const iconSize = 54;\n\n  const iconJSX = renderIcon ? (\n    renderIcon(color, iconSize)\n  ) : (\n    <View\n      className={cn(\n        'size-[72px] rounded-full self-center justify-center ',\n        iconBgColors({ status })\n      )}\n    >\n      {renderStatusIcon(status, iconSize)}\n    </View>\n  );\n  const titleJSX = renderTextLikeJSX(\n    title,\n    cn('text-4xl text-gray-800 text-center', titleTextClassName)\n  );\n  const subtitleJSX = renderTextLikeJSX(\n    subtitle,\n    cn('text-lg text-gray-700 text-center mt-2', subtitleTextClassName)\n  );\n\n  return (\n    <Space {...restProps}>\n      {iconJSX}\n      {titleJSX}\n      {subtitleJSX}\n      {extra}\n    </Space>\n  );\n};\n\nexport default memo(Result);\n",
      "type": "registry:component"
    }
  ]
}