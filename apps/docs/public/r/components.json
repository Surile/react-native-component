{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "components",
  "type": "registry:file",
  "title": "组件导出文件",
  "author": "@zhaolinyang",
  "description": "组件导出文件",
  "files": [
    {
      "path": "./node_modules/@tastien/react-native-component/src/components/index.ts",
      "content": "export { PopoverMode, PopoverPlacement } from 'react-native-popover-view'\n\nexport type { LoadingProps } from './loading/interface'\nexport { default as Loading } from './loading'\n\nexport type { FlexProps, FlexItemProps } from './flex/interface'\nexport { default as Flex } from './flex'\n\nexport type { SpaceProps } from './space/interface'\nexport { default as Space } from './space'\n\nexport type { BlankProps } from './blank/interface'\nexport { default as Blank } from './blank'\n\nexport type { BottomBarProps } from './bottom-bar/interface'\nexport { default as BottomBar } from './bottom-bar'\n\nexport type { ButtonProps } from './button/interface'\nexport { default as Button } from './button'\n\nexport type { DividerProps } from './divider/interface'\nexport { default as Divider } from './divider'\n\nexport type { CellProps, CellGroupProps } from './cell/interface'\nexport { default as Cell } from './cell'\n\nexport type { CardProps } from './card/interface'\nexport { default as Card } from './card'\n\nexport type { PopupProps, PopupPosition } from './popup/types'\nexport { default as Popup } from './popup'\n\nexport { default as Portal } from './portal'\n\nexport type { OverlayProps } from './overlay/types'\nexport { default as Overlay } from './overlay'\n\nexport type { ButtonBarProps } from './button-bar/interface'\nexport { default as ButtonBar } from './button-bar'\n\nexport type { ProviderProps } from './provider/interface'\nexport { default as Provider } from './provider'\n\nexport type { ToastOptions } from './toast/types'\nexport { default as Toast } from './toast'\n\nexport type { CollapseProps } from './collapse/interface'\nexport { default as Collapse } from './collapse'\n\nexport type { CheckboxIconProps, CheckboxProps } from './checkbox/interface'\nexport { default as Checkbox } from './checkbox'\n\nexport type { SkeletonProps } from './skeleton/interface'\nexport { default as Skeleton } from './skeleton'\n\nexport type { TagProps } from './tag/interface'\nexport { default as Tag } from './tag'\n\nexport type { ActionSheetProps } from './action-sheet/interface'\nexport { default as ActionSheet } from './action-sheet'\n\nexport { default as DatePicker } from './date-picker'\n\nexport type { DatePickerColumnMode } from './date-picker-view/interface'\nexport { default as DatePickerView } from './date-picker-view'\n\nexport * from './icons'\n\nexport type { FieldTextProps } from './field/interface'\nexport { default as Field } from './field'\n\nexport type { TreeItemProps, TreeOption } from './tree/interface'\nexport { default as Tree } from './tree'\n\nexport type { NumberInputProps } from './number-input/interface'\nexport { default as NumberInput } from './number-input'\n\nexport type { TextInputProps, TextInputInstance } from './text-input/interface'\nexport { default as TextInput } from './text-input'\n\nexport type { PasswordInputProps } from './password-input/interface'\nexport { default as PasswordInput } from './password-input'\n\nexport type {\n  FormInstance,\n  FormProps,\n  FormItemProps,\n  ListProps,\n  Rule,\n  RuleObject,\n  RuleRender,\n} from './form'\nexport { default as Form, FormItemContext, ListContext } from './form'\n\nexport type {\n  PickerViewProps,\n  PickerOption,\n  PickerOptionMultiple,\n  PickerOptionCascade,\n  PickerValue,\n} from './picker-view/interface'\nexport { default as PickerView } from './picker-view'\n\nexport type { PickerProps } from './picker/interface'\nexport { default as Picker } from './picker'\n\nexport type { SearchProps } from './search/interface'\nexport { default as Search } from './search'\n\nexport type {\n  SelectorValue,\n  SelectorOption,\n  SelectorProps,\n} from './selector/interface'\nexport { default as Selector } from './selector'\n\nexport type { DialogProps } from './dialog/interface'\nexport { default as Dialog } from './dialog'\n\nexport type {\n  StepSelectorInstance,\n  StepSelectorProps,\n} from './step-selector/interface'\nexport { default as StepSelector } from './step-selector'\n\nexport type { SwitchProps } from './switch/interface'\nexport { default as Switch } from './switch'\n\nexport type { NotifyProps, NotifyOptions } from './notify/interface'\nexport { default as Notify } from './notify'\n\nexport type { FloatingPanelProps } from './floating-panel/interface'\nexport { default as FloatingPanel } from './floating-panel' \n\nexport type { ProgressProps, ProgressPageProps } from './progress/interface'\nexport { default as Progress } from './progress'\n\nexport type { PopoverProps } from './popover/interface'\nexport { default as Popover } from './popover'\n\nexport type {\n  DropdownMenuProps,\n  DropdownItemOption,\n  DropdownTextProps,\n} from './dropdown/interface'\nexport { default as Dropdown } from './dropdown'\n\nexport type { ErrorBoundaryProps } from './error-boundary/interface'\nexport { default as ErrorBoundary } from './error-boundary'\n\nexport type { BadgeProps } from './badge/interface'\nexport { default as Badge } from './badge'\n\nexport type {\n  DescriptionGroupProps,\n  DescriptionProps,\n} from './description/interface'\nexport { default as Description } from './description'\n\nexport type { EmptyProps } from './empty/interface'\nexport { default as Empty } from './empty'\n\nexport type { NoticeBarProps } from './notice-bar/interface'\nexport { default as NoticeBar } from './notice-bar'\n\nexport type { ResultProps } from './result/interface'\nexport { default as Result } from './result'\n\nexport type { WaterMarkProps } from './water-mark/interface'\nexport { default as WaterMark } from './water-mark'\n\nexport type { SidebarProps } from './sidebar/interface'\nexport { default as Sidebar } from './sidebar'\n\nexport type { UploaderProps, UploaderValue } from './uploader/interface'\nexport { default as Uploader } from './uploader'\n\nexport type { TabBarProps } from './tab-bar/interface'\nexport { default as TabBar } from './tab-bar'\n\nexport type { TabsProps, TabPaneProps } from './tabs/interface'\nexport { default as Tabs } from './tabs'\n\nexport type { NavBarProps } from './navbar/interface';\nexport { default as NavBar } from './navbar';",
      "type": "registry:file",
      "target": "components/index.ts"
    }
  ]
}