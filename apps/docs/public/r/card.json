{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "card",
  "type": "registry:component",
  "title": "Example card",
  "author": "@gabimoncha",
  "description": "Displays a button which is always red.",
  "registryDependencies": [
    "https://react-native-component-docs.vercel.app/r/helpers.json",
    "https://react-native-component-docs.vercel.app/r/blank.json",
    "https://react-native-component-docs.vercel.app/r/divider.json",
    "https://react-native-component-docs.vercel.app/r/skeleton.json",
    "https://react-native-component-docs.vercel.app/r/card-body.json"
  ],
  "files": [
    {
      "path": "./node_modules/@tastien/react-native-component/src/components/card/card-body.tsx",
      "content": "import isBoolean from 'lodash/isBoolean';\nimport isNumber from 'lodash/isNumber';\nimport React from 'react';\nimport type { CardBodyProps } from './interface';\nimport { getDefaultValue } from '../../helpers';\nimport Blank from '../blank';\n\nconst CardBody: React.FC<CardBodyProps> = ({ padding = true, className, ...restProps }) => {\n  const config =\n    isBoolean(padding) || isNumber(padding)\n      ? {\n          left: padding,\n          right: padding,\n          top: padding,\n          bottom: padding,\n        }\n      : {\n          left: getDefaultValue(padding.left, true),\n          right: getDefaultValue(padding.right, true),\n          top: getDefaultValue(padding.top, true),\n          bottom: getDefaultValue(padding.bottom, true),\n        };\n\n  return <Blank {...restProps} {...config} type='margin' />;\n};\n\nexport default CardBody;\n",
      "type": "registry:component"
    },
    {
      "path": "./node_modules/@tastien/react-native-component/src/components/card/card.tsx",
      "content": "import isBoolean from 'lodash/isBoolean';\nimport isNil from 'lodash/isNil';\nimport React, { memo } from 'react';\nimport { View, TouchableWithoutFeedback, Text } from 'react-native';\nimport { cn } from '../../lib/utils';\n\nimport Divider from '../divider';\nimport Skeleton from '../skeleton';\nimport CardBody from './card-body';\nimport type { CardProps } from './interface';\nimport { renderTextLikeJSX } from '../../helpers';\n\nconst Card: React.FC<CardProps> = ({\n  children,\n  title,\n  titleLeftExtra,\n  extra,\n  footer,\n  titleClassName,\n  titleTextClassName,\n  bodyClassName,\n  footerClassName,\n  footerTextClassName,\n  size = 'm',\n  square = false,\n  loading = false,\n  headerDivider = true,\n  footerDivider = true,\n  bodyPadding = true,\n  onPressHeader,\n  onLayoutHeader,\n  onLayoutBody,\n  className,\n  ...restProps\n}) => {\n  const isS = size === 's';\n\n  const hasTitleLeftExtra = !isNil(titleLeftExtra);\n\n  const titleJSX = renderTextLikeJSX(\n    title,\n    cn(\n      'text-4xl text-[#11151A] font-bold flex-1 mr-2',\n      {\n        'text-2xl': isS,\n        'mr-2': hasTitleLeftExtra,\n      },\n      titleTextClassName\n    ),\n    {\n      numberOfLines: 1,\n    }\n  );\n\n  const footerJSX = renderTextLikeJSX(footer, cn('text-[#5A6068] text-lg', footerTextClassName));\n\n  const showHeader = !isNil(titleJSX) || hasTitleLeftExtra || !isNil(extra);\n  const headerJSX = (\n    <>\n      <View\n        className={cn('flex-row items-center justify-between px-3 min-h-[50px]', {\n          'min-h-10': isS,\n        })}\n        onLayout={onLayoutHeader}\n      >\n        <View className={cn('flex-row items-center flex-1', titleClassName)}>\n          {titleLeftExtra}\n          {titleJSX}\n        </View>\n        {extra}\n      </View>\n      {headerDivider ? <Divider /> : null}\n    </>\n  );\n\n  return (\n    <View\n      {...restProps}\n      className={cn('bg-white overflow-hidden', {\n        'rounded-lg': !square && size === 'm',\n        'rounded-[4px]': !square && size === 's',\n        'rounded-none': square,\n      })}\n    >\n      {showHeader ? (\n        onPressHeader ? (\n          <TouchableWithoutFeedback onPress={onPressHeader}>\n            <View collapsable={false}>{headerJSX}</View>\n          </TouchableWithoutFeedback>\n        ) : (\n          headerJSX\n        )\n      ) : null}\n      <CardBody\n        className={bodyClassName}\n        padding={isBoolean(bodyPadding) && bodyPadding ? 12 : bodyPadding}\n        onLayout={onLayoutBody}\n      >\n        {loading ? <Skeleton loading /> : children}\n      </CardBody>\n\n      {!isNil(footerJSX) ? (\n        <>\n          {footerDivider ? <Divider /> : null}\n          <View className={cn('px-3 py-2', footerClassName)}>{footerJSX}</View>\n        </>\n      ) : null}\n    </View>\n  );\n};\n\nexport default memo(Card);\n",
      "type": "registry:component"
    },
    {
      "path": "./node_modules/@tastien/react-native-component/src/components/card/index.ts",
      "content": "\nimport { attachPropertiesToComponent } from '../../helpers'\nimport Card from './card'\nimport CardBody from './card-body'\n\nexport default attachPropertiesToComponent(Card, {\n  Body: CardBody,\n})\n",
      "type": "registry:component"
    },
    {
      "path": "./node_modules/@tastien/react-native-component/src/components/card/interface.ts",
      "content": "import type { ReactNode } from 'react'\nimport type { ViewProps } from 'react-native'\n\nexport interface CardBodyProps extends ViewProps {\n  /**\n   * 内边距配置\n   * @default true\n   */\n  padding?: boolean | number | {\n    left?: boolean | number\n    right?: boolean | number\n    top?: boolean | number\n    bottom?: boolean | number\n  }\n  /**\n   * 自定义类名\n   */\n  className?: string\n}\n\nexport interface CardProps extends ViewProps {\n  /**\n   * 标题\n   */\n  title?: ReactNode\n\n  /**\n   * 标题左侧操作区\n   */\n  titleLeftExtra?: ReactNode\n\n  /**\n   * 卡片右上角的操作区域\n   */\n  extra?: ReactNode\n\n  /**\n   * 底部区域\n   */\n  footer?: ReactNode\n\n  /**\n   * 自定义标题区域样式\n   */\n  titleClassName?: string\n\n  /**\n   * 头部标题的样式\n   */\n  titleTextClassName?: string\n\n  /**\n   * 内容区域自定义样式\n   */\n  bodyClassName?: string\n\n  /**\n   * 底部自定义样式\n   */\n  footerClassName?: string\n\n  /**\n   * 底部文案自定义样式\n   */\n  footerTextClassName?: string\n\n  /**\n   * 大小\n   * @default 'm'\n   */\n  size?: 's' | 'm'\n\n  /**\n   * 是否为方形\n   * @default false\n   */\n  square?: boolean\n\n  /**\n   * 当卡片内容还在加载中时，可以用 loading 展示一个占位\n   * @default false\n   */\n  loading?: boolean\n\n  /**\n   * header 区域显示分割线\n   * @default true\n   */\n  headerDivider?: boolean\n\n  /**\n   * footer 区域显示分割线\n   * @default true\n   */\n  footerDivider?: boolean\n\n  /**\n   * body 是否有内边距\n   * @default true\n   */\n  bodyPadding?: boolean | number | {\n        left?: boolean | number\n        right?: boolean | number\n        top?: boolean | number\n        bottom?: boolean | number\n      }\n\n  /**\n   * 点击 header 区域，该区域包含 titleLeftExtra、title、extra\n   */\n  onPressHeader?: () => void\n\n  /**\n   * header 区域渲染完成\n   */\n  onLayoutHeader?: ViewProps['onLayout']\n\n  /**\n   * body 区域渲染完成\n   */\n  onLayoutBody?: ViewProps['onLayout']\n\n  /**\n   * 容器自定义类名\n   */\n  className?: string\n}\n",
      "type": "registry:component"
    }
  ]
}